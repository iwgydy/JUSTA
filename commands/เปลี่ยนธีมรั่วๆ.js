const themes = [
    "theme1", // Replace with actual theme IDs
    "theme2",
    "theme3",
    "theme4",
    "theme5"
]; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ò‡∏µ‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£

module.exports = {
    config: {
        name: "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ò‡∏µ‡∏°‡∏£‡∏±‡πà‡∏ß",
        version: "1.1.0",
        description: "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ò‡∏µ‡∏°‡πÅ‡∏ä‡∏ó‡∏£‡∏±‡∏ß‡πÜ ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏´‡∏¢‡∏∏‡∏î ‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏û‡∏¥‡∏°‡∏û‡πå '‡∏´‡∏¢‡∏∏‡∏î' (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)",
        commandCategory: "utility",
        usages: "/‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ò‡∏µ‡∏°‡∏£‡∏±‡πà‡∏ß",
        cooldowns: 5
    },
    run: async ({ api, event }) => {
        const { senderID, threadID, messageID } = event;

        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≠‡∏ó‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà
        const botSessions = global.botSessions || {};
        let currentBot = null;

        for (const token in botSessions) {
            if (botSessions[token].api === api) {
                currentBot = botSessions[token];
                break;
            }
        }

        if (!currentBot) {
            return api.sendMessage("‚ùó ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ö‡∏≠‡∏ó‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà", threadID, messageID);
        }

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ö‡∏≠‡∏ó‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if (senderID !== currentBot.adminID) {
            return api.sendMessage("‚ùó ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", threadID, messageID);
        }

        // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ò‡∏µ‡∏°
        let isChangingThemes = true;

        api.sendMessage("üé® ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ò‡∏µ‡∏°‡πÅ‡∏ä‡∏ó‡∏£‡∏±‡∏ß‡πÜ! ‡∏û‡∏¥‡∏°‡∏û‡πå '‡∏´‡∏¢‡∏∏‡∏î' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", threadID, () => {
            const changeTheme = async () => {
                if (!isChangingThemes) return;

                // ‡∏™‡∏∏‡πà‡∏°‡∏ò‡∏µ‡∏°‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
                const randomTheme = themes[Math.floor(Math.random() * themes.length)];

                try {
                    await api.changeThreadColor(randomTheme, threadID);
                } catch (error) {
                    console.error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ò‡∏µ‡∏°‡πÑ‡∏î‡πâ:", error);
                }

                // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ò‡∏µ‡∏°‡πÉ‡∏´‡∏°‡πà (‡πÉ‡∏´‡πâ‡∏£‡∏±‡πà‡∏ß‡∏´‡∏ô‡πà‡∏≠‡∏¢)
                setTimeout(changeTheme, 1000);
            };

            // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ò‡∏µ‡∏°
            changeTheme();

            // ‡∏£‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á "‡∏´‡∏¢‡∏∏‡∏î" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
            const listener = async (reply) => {
                if (reply.senderID === senderID && reply.body.toLowerCase() === "‡∏´‡∏¢‡∏∏‡∏î") {
                    isChangingThemes = false;
                    api.removeListener("message", listener);
                    api.sendMessage("‚õî ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ò‡∏µ‡∏°‡πÅ‡∏ä‡∏ó‡∏´‡∏¢‡∏∏‡∏î‡∏•‡∏á‡πÅ‡∏•‡πâ‡∏ß", threadID);
                }
            };

            api.listenMqtt(listener);
        });
    }
};
