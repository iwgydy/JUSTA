const fs = require("fs");
const axios = require("axios");
const stream = require("stream");

module.exports = {
    config: {
        name: "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏†‡∏≤‡∏û‡∏™‡∏°‡∏à‡∏£‡∏¥‡∏á",
        version: "1.3.2",
        description: "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤ uploadAttachment",
        commandCategory: "image",
        usages: "<‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏†‡∏≤‡∏û>",
        cooldowns: 5
    },
    run: async ({ api, event, args }) => {
        const { threadID, messageID } = event;

        const prompt = args.join(" ");
        if (!prompt) {
            return api.sendMessage("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏û!", threadID, messageID);
        }

        const statusMessage = await api.sendMessage("‚è∞ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏†‡∏≤‡∏û 0.0.0.0\nüé® ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà...", threadID);

        try {
            const apiUrl = `https://kaiz-apis.gleeze.com/api/flux?prompt=${encodeURIComponent(prompt)}`;
            const response = await axios.get(apiUrl, { responseType: "arraybuffer" });

            if (!response || !response.data) {
                throw new Error("‚ùå API ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏û‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤");
            }

            const imageBuffer = Buffer.from(response.data, "binary");
            const readableStream = new stream.PassThrough();
            readableStream.end(imageBuffer);

            api.sendMessage(
                {
                    body: "üéâ ‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß!",
                    attachment: readableStream
                },
                threadID,
                () => api.unsendMessage(statusMessage.messageID)
            );
        } catch (error) {
            console.error(error);
            api.sendMessage(
                "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏†‡∏≤‡∏û ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á!",
                threadID,
                () => api.unsendMessage(statusMessage.messageID)
            );
        }
    }
};
