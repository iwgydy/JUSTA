const axios = require("axios");
const fs = require("fs");

module.exports.config = {
    name: "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏π‡∏õ",
    version: "1.2.0",
    hasPermssion: 0,
    credits: "‡∏ï‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏´‡∏•‡πà‡∏≠",
    description: "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏ò‡∏µ‡∏°‡∏´‡∏¥‡∏°‡∏∞‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡πå‡∏°‡∏≤‡∏™ 2025 ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏µ‡∏¢‡∏ß",
    commandCategory: "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤",
    usages: "[‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤]",
    cooldowns: 5
};

module.exports.run = async function({ api, event, args }) {
    const searchQuery = args.join(" ");
    if (!searchQuery) {
        return api.sendMessage("‚ùÑÔ∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô: /‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏π‡∏õ Christmas ‚ùÑÔ∏è", event.threadID, event.messageID);
    }

    try {
        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏π‡∏õ
        const response = await axios.get(`https://api.sumiproject.net/pinterest?search=${encodeURIComponent(searchQuery)}`);
        const { data } = response.data;

        if (!data || data.length === 0) {
            return api.sendMessage(`üéÑ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö "${searchQuery}" üéÑ`, event.threadID, event.messageID);
        }

        // ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡∏™‡πà‡∏á 5 ‡∏£‡∏π‡∏õ‡πÅ‡∏£‡∏Å)
        const imageUrls = data.slice(0, 5);

        // ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
        const attachments = await Promise.all(
            imageUrls.map(async (url, index) => {
                const path = `/tmp/image${index}.jpg`;
                const writer = fs.createWriteStream(path);
                const response = await axios({ url, method: "GET", responseType: "stream" });
                response.data.pipe(writer);
                await new Promise((resolve, reject) => {
                    writer.on("finish", resolve);
                    writer.on("error", reject);
                });
                return fs.createReadStream(path);
            })
        );

        // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏†‡∏≤‡∏û
        api.sendMessage(
            {
                body: `
‚ùÑÔ∏èüéÖ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüéÖ‚ùÑÔ∏è
         üéÅ **ùë™ùíâùíìùíäùíîùíïùíéùíÇùíî 2025 ùë∞ùíéùíÇùíàùíÜ ùë∫ùíÜùíÇùíìùíÑùíâ** üéÅ
     üåü **‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤: "${searchQuery}"** üåü
‚ùÑÔ∏èüéÖ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüéÖ‚ùÑÔ∏è
üéÄ **‡πÄ‡∏û‡∏•‡∏¥‡∏î‡πÄ‡∏û‡∏•‡∏¥‡∏ô‡∏Å‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á!** üéÄ
                `,
                attachment: attachments
            },
            event.threadID,
            () => {
                // ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏´‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
                attachments.forEach((file) => fs.unlinkSync(file.path));
            },
            event.messageID
        );
    } catch (error) {
        console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error);
        api.sendMessage("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‚ùå", event.threadID, event.messageID);
    }
};
