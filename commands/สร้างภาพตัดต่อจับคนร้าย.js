const axios = require("axios");
const fs = require("fs");
const { createCanvas, loadImage } = require("canvas");

module.exports.config = {
    name: "‡∏à‡∏±‡∏ö‡∏Ñ‡∏ô‡∏£‡πâ‡∏≤‡∏¢",
    version: "1.0.1",
    hasPermssion: 0,
    credits: "‡∏ï‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏´‡∏•‡πà‡∏≠",
    description: "‡∏à‡∏±‡∏ö‡∏Ñ‡∏ô‡∏£‡πâ‡∏≤‡∏¢‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏™‡∏î‡∏á ID ‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Canvas ‡πÅ‡∏•‡∏∞‡πÅ‡∏ó‡πá‡∏Å‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô",
    commandCategory: "‡∏†‡∏≤‡∏û",
    usages: "[‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠ @mention]",
    cooldowns: 5
};

module.exports.run = async function({ api, event, args }) {
    const mentionIDs = Object.keys(event.mentions);
    const userID = mentionIDs.length > 0 ? mentionIDs[0] : event.senderID;
    const userName = mentionIDs.length > 0 ? Object.values(event.mentions)[0] : "‡∏Ñ‡∏∏‡∏ì";

    if (!userID) {
        return api.sendMessage("üí¨ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ!", event.threadID, event.messageID);
    }

    const startTime = Date.now();

    try {
        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API
        const response = await axios.get(`https://api-canvass.vercel.app/art-expert`, {
            params: { userid: userID }
        });

        if (!response.data || !response.data.success) {
            return api.sendMessage("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà!", event.threadID, event.messageID);
        }

        // ‡∏î‡∏∂‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å API
        const userImageURL = response.data.image;
        const userImage = await loadImage(userImageURL);

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á Canvas
        const canvas = createCanvas(800, 600);
        const ctx = canvas.getContext("2d");

        // ‡∏ß‡∏≤‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
        const background = await loadImage("https://your-image-link.com/police-background.png");
        ctx.drawImage(background, 0, 0, canvas.width, canvas.height);

        // ‡∏ß‡∏≤‡∏î‡∏£‡∏π‡∏õ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        ctx.drawImage(userImage, 300, 200, 200, 200);

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        ctx.font = "30px Kanit";
        ctx.fillStyle = "#ffffff";
        ctx.fillText(`‡∏Ñ‡∏ô‡∏£‡πâ‡∏≤‡∏¢ ID: ${userID}`, 250, 500);

        // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô Buffer ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ
        const buffer = canvas.toBuffer();
        const filePath = `‡∏à‡∏±‡∏ö‡∏Ñ‡∏ô‡∏£‡πâ‡∏≤‡∏¢-${userID}.png`;
        fs.writeFileSync(filePath, buffer);

        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤
        const processingTime = ((Date.now() - startTime) / 1000).toFixed(2);

        // ‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏ó‡πá‡∏Å
        api.sendMessage({
            body: `‚è∞ ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤: ${processingTime} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ\nüì∏ ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á ${userName} ‡∏Ñ‡∏ô‡∏£‡πâ‡∏≤‡∏¢‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°!`,
            mentions: [{
                tag: userName,
                id: userID
            }],
            attachment: fs.createReadStream(filePath)
        }, event.threadID, () => {
            fs.unlinkSync(filePath); // ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏•‡∏±‡∏á‡∏™‡πà‡∏á
        });
    } catch (error) {
        console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Ñ‡∏ô‡∏£‡πâ‡∏≤‡∏¢:", error);
        api.sendMessage("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà!", event.threadID, event.messageID);
    }
};
