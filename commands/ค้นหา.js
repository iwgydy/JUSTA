const axios = require("axios");

module.exports.config = {
  name: "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏≠‡∏ß‡∏ï‡∏≤‡∏£‡πå",
  version: "1.1",
  hasPermssion: 0,
  credits: "YourName",
  description: "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏≠‡∏ß‡∏ï‡∏≤‡∏£‡πå‡∏à‡∏≤‡∏Å API ‡∏î‡πâ‡∏ß‡∏¢‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç ID",
  commandCategory: "fun",
  usages: "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏≠‡∏ß‡∏ï‡∏≤‡∏£‡πå <‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç ID>",
  cooldowns: 5,
};

module.exports.run = async function ({ api, event, args }) {
  try {
    const id = args[0];
    if (!id || isNaN(id) || id < 1 || id > 846) {
      return api.sendMessage("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç ID ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ (‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 1-846)", event.threadID, event.messageID);
    }

    const response = await axios.get(`https://api.joshweb.click/canvas/search?id=${id}`);
    const data = response.data;

    if (!data || !data.data) {
      return api.sendMessage("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏ß‡∏ï‡∏≤‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ô‡∏µ‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà", event.threadID, event.messageID);
    }

    const { imgAnime, colorBg, dm } = data.data;

    if (!imgAnime) {
      return api.sendMessage("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏ß‡∏ï‡∏≤‡∏£‡πå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà", event.threadID, event.messageID);
    }

    const imageStream = await axios({
      url: imgAnime,
      method: "GET",
      responseType: "stream",
    });

    api.sendMessage(
      {
        body: `üé® ‡∏≠‡∏ß‡∏ï‡∏≤‡∏£‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç: ${id}\nüåà ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á: ${colorBg}\nüßç ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ${dm}`,
        attachment: imageStream.data,
      },
      event.threadID,
      event.messageID
    );
  } catch (error) {
    console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error.message);
    api.sendMessage("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏≠‡∏ß‡∏ï‡∏≤‡∏£‡πå‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á!", event.threadID, event.messageID);
  }
};
