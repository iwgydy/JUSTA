const axios = require("axios");
const sharp = require("sharp");
const fs = require("fs-extra");
const path = require("path");

module.exports.config = {
    name: "‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏ß‡∏µ2",
    version: "1.4.0",
    hasPermssion: 0,
    credits: "YourName",
    description: "‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏†‡∏≤‡∏û‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏´‡∏≤‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ô 100%",
    commandCategory: "fun",
    usages: "[‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå]",
    cooldowns: 5
};

module.exports.run = async function ({ api, event }) {
    try {
        const { threadID, senderID, messageID } = event;
        const threadInfo = await api.getThreadInfo(threadID);
        const members = threadInfo.participantIDs;

        if (members.length < 2) {
            return api.sendMessage("‚ùå ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡πÑ‡∏î‡πâ!", threadID, messageID);
        }

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏°‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
        const getRandomMember = (excludeID) => {
            const filtered = members.filter(id => id !== excludeID);
            return filtered[Math.floor(Math.random() * filtered.length)];
        };

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏Ñ‡∏°‡∏ï‡∏≤‡∏°‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå
        const getQuoteByPercentage = (percentage) => {
            if (percentage <= 10) return "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÅ‡∏Ñ‡πà‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏û‡∏≠‡∏´‡∏£‡∏≠‡∏Å ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏≠‡∏µ‡∏Å‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏ô‡∏∞! üå±";
            if (percentage <= 30) return "‡∏£‡∏±‡∏Å‡∏ô‡∏µ‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ï‡πâ‡∏ô‡∏Å‡∏•‡πâ‡∏≤ ‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏î‡∏ô‡πâ‡∏≥‡∏û‡∏£‡∏ß‡∏ô‡∏î‡∏¥‡∏ô‡∏≠‡∏µ‡∏Å‡∏™‡∏±‡∏Å‡∏û‡∏±‡∏Å üåøüíö";
            if (percentage <= 50) return "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ß‡∏±‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞ ‡∏•‡∏≠‡∏á‡∏´‡∏°‡∏±‡πà‡∏ô‡∏î‡∏π‡πÅ‡∏•‡∏Å‡∏±‡∏ô‡∏ö‡πà‡∏≠‡∏¢‡πÜ ‡∏ô‡πâ‡∏≤ ‚ú®üåª";
            if (percentage <= 70) return "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ö‡πà‡∏á‡∏ö‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏ô‡∏∞! üíïüåπ";
            if (percentage <= 90) return "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏π‡πà‡∏ô‡∏µ‡πâ‡∏ä‡πà‡∏≤‡∏á‡∏´‡∏ß‡∏≤‡∏ô‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ô‡πâ‡∏≥‡∏ú‡∏∂‡πâ‡∏á‡πÄ‡∏•‡∏¢‡∏•‡πà‡∏∞! üçØüíñ";
            return "‡∏£‡∏±‡∏Å‡∏ô‡∏µ‡πâ‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡πÅ‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡∏°‡∏≤‡∏Ñ‡∏π‡πà‡∏Å‡∏±‡∏ô‡πÄ‡∏•‡∏¢! üíç‚ù§Ô∏è";
        };

        const firstUser = senderID;
        const secondUser = getRandomMember(firstUser);

        const firstUserInfo = await api.getUserInfo(firstUser);
        const secondUserInfo = await api.getUserInfo(secondUser);

        const firstUserName = firstUserInfo[firstUser].name || "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏ä‡∏∑‡πà‡∏≠";
        const secondUserName = secondUserInfo[secondUser].name || "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏ä‡∏∑‡πà‡∏≠";

        const firstUserProfile = `https://graph.facebook.com/${firstUser}/picture?width=720&height=720&access_token=6628568379%7Cc1e620fa708a1d5696fb991c1bde5662`;
        const secondUserProfile = `https://graph.facebook.com/${secondUser}/picture?width=720&height=720&access_token=6628568379%7Cc1e620fa708a1d5696fb991c1bde5662`;

        const matchPercentage = Math.floor(Math.random() * 100) + 1;
        const loveQuote = getQuoteByPercentage(matchPercentage);

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏†‡∏≤‡∏û‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö 100%
        if (matchPercentage === 100) {
            const backgroundImageUrl = "https://i.imgur.com/JGTkjSo.jpeg";
            const tmpPath = path.join(__dirname, "tmp");
            const outputImagePath = path.join(tmpPath, `special_love_${Date.now()}.png`);

            if (!fs.existsSync(tmpPath)) fs.mkdirSync(tmpPath);

            // ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏†‡∏≤‡∏û‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á
            const [backgroundImage, secondUserImage] = await Promise.all([
                axios({ url: backgroundImageUrl, responseType: "arraybuffer" }),
                axios({ url: secondUserProfile, responseType: "arraybuffer" })
            ]);

            // ‡πÉ‡∏ä‡πâ sharp ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏ß‡∏°‡∏†‡∏≤‡∏û
            await sharp(Buffer.from(backgroundImage.data))
                .composite([{ input: Buffer.from(secondUserImage.data), gravity: "center" }])
                .resize(1280, 720)
                .toFile(outputImagePath);

            // ‡∏™‡πà‡∏á‡∏†‡∏≤‡∏û‡∏û‡∏¥‡πÄ‡∏®‡∏©
            return api.sendMessage({
                body: `üíñ ‡∏Ñ‡∏π‡πà‡πÅ‡∏ó‡πâ‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠!\n\n‚ú® ${firstUserName} ‚ù§Ô∏è ${secondUserName}\nüíØ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ: ${matchPercentage}%\nüíå ‡∏£‡∏±‡∏Å‡∏ô‡∏µ‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏±‡∏ô üíç‚ù§Ô∏è\n\n‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏Å‡∏Å‡∏±‡∏ô‡∏ô‡∏≤‡∏ô‡πÜ ‡∏ô‡∏∞! üíï`,
                attachment: fs.createReadStream(outputImagePath)
            }, threadID, () => fs.unlinkSync(outputImagePath), messageID);
        }

        // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ñ‡∏≥‡∏Ñ‡∏°
        api.sendMessage({
            body: `üíñ ‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n\n‚ú® ${firstUserName} ‚ù§Ô∏è ${secondUserName}\nüíØ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ: ${matchPercentage}%\nüíå ${loveQuote}\n\n‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏π‡πà‡∏ô‡∏µ‡πâ‡∏£‡∏±‡∏Å‡∏Å‡∏±‡∏ô‡∏ô‡∏≤‡∏ô‡πÜ ‡∏ô‡πâ‡∏≤ üíñ`,
            attachment: [
                await axios.get(firstUserProfile, { responseType: "stream" }).then(res => res.data),
                await axios.get(secondUserProfile, { responseType: "stream" }).then(res => res.data)
            ]
        }, threadID, messageID);
    } catch (error) {
        console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà:", error);
        return api.sendMessage("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà!", event.threadID, event.messageID);
    }
};
