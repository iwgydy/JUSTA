const axios = require('axios');
const fs = require('fs');
const { exec } = require('child_process');

module.exports = {
    config: {
        name: '‡πÄ‡∏à‡∏≠‡πÑ‡∏ô‡∏ó‡πå',
        description: '‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ö‡πÄ‡∏à‡∏≠‡πÑ‡∏ô‡∏ó‡πå‡πÉ‡∏ô‡∏ò‡∏µ‡∏°‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡πå‡∏°‡∏≤‡∏™ 2025 üéÑ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡πà‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á',
        usage: '‡πÄ‡∏à‡∏≠‡πÑ‡∏ô‡∏ó‡πå [‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°]',
    },
    run: async ({ api, event, args }) => {
        const start = Date.now();

        if (args.length === 0) {
            return api.sendMessage("üéÖ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏à‡∏≠‡πÑ‡∏ô‡∏ó‡πå üéÑ", event.threadID);
        }

        const command = args.join(' ').trim();
        const firebaseURL = "https://goak-71ac8-default-rtdb.firebaseio.com/responses.json";

        try {
            const response = await axios.get(firebaseURL);
            const data = response.data;

            if (data) {
                const questions = Object.keys(data);
                const matchedQuestion = questions.find(q => q === command);
                const botResponse = matchedQuestion ? data[matchedQuestion] : "‡∏ú‡∏°‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏≥‡∏ô‡∏µ‡πâ üéÅ";

                const end = Date.now();
                const elapsedTime = ((end - start) / 1000).toFixed(2);

                // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πà‡∏≠‡∏ô
                const messageText = `‚è∞ ${elapsedTime}\n\nüéÑ *Merry Christmas 2025!*\nüéÖ ‡πÄ‡∏à‡∏≠‡πÑ‡∏ô‡∏ó‡πå: ${botResponse}`;
                api.sendMessage(messageText, event.threadID, async () => {
                    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á
                    const ttsText = `‡πÄ‡∏à‡∏≠‡πÑ‡∏ô‡∏ó‡πå: ${botResponse}`;
                    const ttsCommand = `gtts-cli "${ttsText}" --lang th --output response.mp3`;

                    exec(ttsCommand, (error) => {
                        if (error) {
                            console.error("‚ùå ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", error.message);
                            return;
                        }

                        // ‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á
                        const voiceMessage = {
                            attachment: fs.createReadStream('response.mp3'),
                        };
                        api.sendMessage(voiceMessage, event.threadID);
                    });
                });
            }
        } catch (error) {
            console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error.message || error);
            return api.sendMessage(
                `‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á üéÑ`,
                event.threadID
            );
        }
    },
};
