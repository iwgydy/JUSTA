const ytdl = require("ytdl-core");
const fs = require("fs");

module.exports.config = {
    name: "‡∏î‡∏π‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠",
    version: "1.0.0",
    hasPermssion: 0,
    credits: "‡∏ï‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏´‡∏•‡πà‡∏≠",
    description: "‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏à‡∏≤‡∏Å YouTube ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó (‡∏à‡∏≥‡∏Å‡∏±‡∏î 25MB)",
    commandCategory: "‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ",
    usages: "[‡∏•‡∏¥‡∏á‡∏Å‡πå YouTube]",
    cooldowns: 0
};

module.exports.run = async function({ api, event, args }) {
    try {
        const videoURL = args[0]; // ‡∏£‡∏±‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå YouTube ‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
        if (!videoURL || !videoURL.includes("youtube.com")) {
            return api.sendMessage("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏•‡∏¥‡∏á‡∏Å‡πå YouTube ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!", event.threadID, event.messageID);
        }

        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
        const videoInfo = await ytdl.getInfo(videoURL);
        const title = videoInfo.videoDetails.title;

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå
        const videoFormat = ytdl.chooseFormat(videoInfo.formats, { quality: "lowest" });
        const videoSize = videoFormat.contentLength ? parseInt(videoFormat.contentLength) / (1024 * 1024) : 0; // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏õ‡πá‡∏ô MB

        if (videoSize > 25) {
            return api.sendMessage(
                `‚ùå ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ "${title}" ‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î ${videoSize.toFixed(2)}MB ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏Å‡∏¥‡∏ô‡∏Ç‡∏µ‡∏î‡∏à‡∏≥‡∏Å‡∏±‡∏î 25MB!`,
                event.threadID,
                event.messageID
            );
        }

        const videoStream = ytdl(videoURL, { filter: "audioandvideo", quality: "lowest" });
        const path = `./temp/${title}.mp4`; // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏•‡∏á temp

        // ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
        const writeStream = fs.createWriteStream(path);
        videoStream.pipe(writeStream);

        writeStream.on("finish", () => {
            // ‡∏™‡πà‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó
            api.sendMessage(
                {
                    body: `üé• **${title}** üé•\n‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå: ${videoSize.toFixed(2)}MB`,
                    attachment: fs.createReadStream(path)
                },
                event.threadID,
                () => {
                    // ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à
                    fs.unlinkSync(path);
                },
                event.messageID
            );
        });
    } catch (error) {
        console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error);
        api.sendMessage("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà", event.threadID, event.messageID);
    }
};