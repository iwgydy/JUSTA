const axios = require("axios");
const ytdl = require("ytdl-core");
const fs = require("fs");
const path = require("path");

module.exports = {
    config: {
        name: "‡∏î‡∏π‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏¢‡∏π‡∏ó‡∏π‡∏õ",
        description: "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ YouTube ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå",
        usage: "!‡∏î‡∏π‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏¢‡∏π‡∏ó‡∏π‡∏õ <‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠>",
        permissions: "everyone",
    },
    run: async ({ api, event, args }) => {
        if (args.length < 1) {
            return api.sendMessage(
                "‚ùó ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: !‡∏î‡∏π‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏¢‡∏π‡∏ó‡∏π‡∏õ ‡∏õ‡∏£‡∏≤‡∏£‡∏ñ‡∏ô‡∏≤‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏î‡∏§‡πÖ",
                event.threadID,
                event.messageID
            );
        }

        const query = args.join(" ");
        const apiUrl = `https://nethwieginedev.vercel.app/api/ytsearch3?name=${encodeURIComponent(query)}`;

        try {
            // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
            const response = await axios.get(apiUrl);
            const videos = response.data.result;

            if (!videos || videos.length === 0) {
                return api.sendMessage(
                    "‚ùó ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤",
                    event.threadID,
                    event.messageID
                );
            }

            // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å
            const video = videos[0];
            const videoUrl = video.url;

            // ‡πÅ‡∏à‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
            api.sendMessage(
                `üé¨ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠: ${video.title}\n‚è±Ô∏è ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤: ${video.duration}`,
                event.threadID,
                event.messageID
            );

            // ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
            const videoPath = path.join(__dirname, `../../downloads/${video.id}.mp4`);
            const videoStream = ytdl(videoUrl, { quality: "highest" });

            videoStream.pipe(fs.createWriteStream(videoPath));

            videoStream.on("end", async () => {
                // ‡∏™‡πà‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
                api.sendMessage(
                    {
                        body: `üé¨ ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠: ${video.title}`,
                        attachment: fs.createReadStream(videoPath),
                    },
                    event.threadID,
                    () => {
                        // ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à
                        fs.unlinkSync(videoPath);
                    }
                );
            });

            videoStream.on("error", (err) => {
                console.error("‚ùå Error downloading video:", err.message);
                api.sendMessage(
                    "‚ùó ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠",
                    event.threadID,
                    event.messageID
                );
            });
        } catch (error) {
            console.error("‚ùå Error fetching YouTube data:", error.message);
            return api.sendMessage(
                "‚ùó ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö API",
                event.threadID,
                event.messageID
            );
        }
    },
};
